---
# file: tasks/main.yml
# Top-level installer for Fluentd.
#
# @see http://docs.treasuredata.com/articles/td-agent
#
- name: cleanup old configs and plugins
  file:
    state: absent
    path: "{{ item }}/"
  with_items:
    - /etc/td-agent/conf.d
    - /etc/td-agent/plugin
  when: tdagent_do_cleanup_old

- name: set role variables, if necessary
  include: set-role-variables.yml

- name: delegate to APT system for installation
  include: use-apt.yml
  when: ansible_pkg_mgr == "apt"

- name: delegate to YUM system for installation
  include: use-yum.yml
  when: ansible_pkg_mgr == "yum"

- name: mkdir for conf.d
  file:
    path: "{{item}}"
    state: directory
    owner: td-agent
    group: td-agent
  with_items:
    - /etc/td-agent/conf.d
    - /etc/td-agent/plugin

- name: rename default td-agent.conf
  command: creates="/etc/td-agent/td-agent.conf.bak" mv /etc/td-agent/td-agent.conf /etc/td-agent/td-agent.conf.bak

- name: copy new td-agent.conf from role's default
  copy:
    src: ../files/td-agent.conf
    dest: /etc/td-agent/td-agent.conf
    owner: td-agent
    group: td-agent
  when: tdagent_conf_copy is not defined and tdagent_conf_template is not defined

- name: copy new "td-agent.conf" verbatim from main playbook's
  copy:
    src:  "{{ playbook_dir }}/{{ tdagent_conf_copy }}"
    dest: /etc/td-agent/td-agent.conf
    owner: td-agent
    group: td-agent
  when: tdagent_conf_copy is defined

- name: copy (from template) new "td-agent.conf" from main playbook's
  template:
    src:  "{{ playbook_dir }}/{{ tdagent_conf_template }}"
    dest: /etc/td-agent/td-agent.conf
    owner: td-agent
    group: td-agent
  when: tdagent_conf_template is defined

- name: copy other config files from playbook's, if any
  template:
    src:  "{{ playbook_dir }}/{{ item.value.src }}"
    dest: "/etc/td-agent/conf.d/{{ item.value.dest }}"
    owner: td-agent
    group: td-agent
  with_dict: '{{ tdagent_conf_others | default({}) }}'

- name: copy td-restart script
  template: src=td-restart.sh.j2 dest=/bin/td-restart.sh owner=root group=root mode=0744

- name: log rotation
  template: src=logrotate.j2 dest=/etc/logrotate.d/td-agent owner=root group=root mode=0644

# GEM installed on:
#   /opt/td-agent/embedded/lib/ruby/gems/2.1.0/gems/
- name: install plugins, if any
  gem:
      name: "{{ item }}"
      executable: /opt/td-agent/embedded/bin/fluent-gem
      state: latest
      user_install: no
  with_items: "{{ tdagent_plugins | default([]) }}"

- name: install plugins with specified versions, if any
  gem:
      name: "{{ item.value.name }}"
      executable: /opt/td-agent/embedded/bin/fluent-gem
      state: present
      version: "{{ item.value.version }}"
      user_install: no
  with_dict: "{{ tdagent_plugins_versions | default({}) }}"

- name: set INIT status and start
  service: name=td-agent state=started enabled=yes
  when: tdagent_use_service|bool
